Controllers
1) UserController
2) UserRoleController
3) PatientCardController
4) MeetingController
5) PaymentController
6) DiagnoseController

1) UserController

method: GET
url: api/user/getAll
RequestBody:
PathVariable:
expected return: All User objects
error handling: Unexpected errors

method: GET
url: api/user/getById/{id}
RequestBody:
PathVariable: Long id
expected return: User object with this id
error handling: Unexpected errors, No such user

method: POST
url: api/user/create
RequestBody: UserFront userFront
{
    "user": {
        "username": "test_1",
        "email": "test@gmail.com",
        "fullname": "Test Test",
        "phoneNumber": "+996555000001",
        "password": "123",
        "gender": "MALE",
        "birthDate": "2001-10-20T00:00:00.0000"
    },
    "role": "ROLE_ADMIN"
}
PathVariable:
expected return: Created a new User
error handling: Unexpected errors, DataIntegrityViolation

method: POST
url: api/user/disable/{id}
RequestBody:
PathVariable: Long id
expected return: Disable User with that id - cannot access any service
error handling: Unexpected errors, No such user

method: POST
url: api/user/activate/{id}
RequestBody:
PathVariable: Long id
expected return: Enable or Activate User with that id - can access any service
error handling: Unexpected errors, No such user

method: DELETE
url: api/user/delete/{id}
RequestBody:
PathVariable: Long id
expected return: Delete User with that id - no recovery
error handling: Unexpected errors, No such user

2)UserRoleController

method: GET
url: api/userRoles/getAll
RequestBody:
PathVariable:
expected return: All UserRole objects
error handling: Unexpected errors

method: GET
url: api/userRoles/getAllByUserId/{id}
RequestBody:
PathVariable: Long id
expected return: Roles of the User with that id
error handling: Unexpected errors, No such User

method: POST
url: api/userRoles/createForUser/{userId}
RequestBody: UserRole userRole
{
    "role": "ROLE_ADMIN"
}
PathVariable: Long userId
expected return: New UserRole object
error handling: Unexpected errors, No such user

method: DELETE
url: api/userRoles/delete/{id}
RequestBody:
PathVariable: Long id
expected return: Deleted UserRole with that id
error handling: Unexpected errors

3)PatientCardController

method: GET
role: ROLE_RECEPTION
url: api/patientController/getAll
RequestBody:
PathVariable:
expected return: All PatientCard objects
error handling: Unexpected errors

method: POST
role: ROLE_RECEPTION
url: api/patientController/create
RequestBody: PatientCardWrapper patientCard
{
    "patient": {
        "fullname": "Patient2",
        "email": "patient2@gmail.com",
        "phoneNumber": "+996551010203",
        "gender": "MALE",
        "birthDate": "1998-11-20T00:00:00.0000"
    },
    "address": {
        "district": "Свердловский",
        "city": "Бишкек",
        "inhabitedLocality": "12мкр",
        "street": "Ankara",
        "house": "28/1",
        "apartment": "21",
        "homeTelephone": "+996312121212"
    }
}
PathVariable:
expected return: New Patient card and User - patient created
error handling: Unexpected errors, Constraint violation exception(some values are not unique)

method: POST
role: ROLE_DOCTOR
url: api/patientController/updatePatientCard
RequestBody: PatientUpdateWrapper wrapper
{
    "id": 59,
    "address": {
        "district": "Алматинский",
        "city": "Алмата",
        "inhabitedLocality": "12мкр",
        "street": "Жибек жолу",
        "house": "22",
        "apartment": "12",
        "homeTelephone": "+996312144212"
    }
}
PathVariable:
expected return: Updated Patient card
error handling: Unexpected errors, No such Patient Card with that id

method: GET
role: ROLE_PATIENT
url: api/patientController/getMyCard
RequestBody:
PathVariable:
expected return: Medcard of the current user
error handling: Unexpected errors, There is no MedCard for current user!

method: GET
role: ROLE_PATIENT
url: api/patientController/deletePatientsCard/{id}
RequestBody:
PathVariable: Long PatientCardId
expected return: Deletes the Patient's card, but the user-patient remains(ROLE_PATIENT is removed, and no patientId)
error handling: Unexpected errors, There is no MedCard with the given id!

4) MeetingController

method: GET
role: ROLE_RECEPTION
url: api/meeting/getAll
RequestBody:
PathVariable:
expected return: All meeting objects
error handling: Unexpected errors

method: GET
role: ROLE_RECEPTION
url: api/meeting/getFrom
RequestBody: LocalDateTime time
{
    "dateTime": "2020-11-20T00:00:00.0000"
}
PathVariable:
expected return: All meeting objects from given date
error handling: Unexpected errors

method: GET
role: ROLE_PATIENT
url: api/meeting/getMyMeetingsPatient
RequestBody:
PathVariable:
expected return: My meetings at the hospital
error handling: Unexpected errors

method: GET
role: ROLE_DOCTOR
url: api/meeting/getMyMeetingsDoctor
RequestBody:
PathVariable:
expected return: My DOCTOR meetings
error handling: Unexpected errors

method: POST
role: ROLE_RECEPTION
url: api/meeting/create/{patientId}/{doctorId}
RequestBody: Meeting meeting
{
    "dateFrom": "2020-12-31T08:00:00",
    "dateTo": "2020-12-31T12:00:00",
    "amountToBePaid": 250
}
PathVariable: Long patientId, Long doctorId
expected return: Creates new Meeting
error handling: Unexpected errors, Incorrect id for doctor or patient

method: POST
role: ROLE_DOCTOR
url: api/meeting/meetingHappened/{id}
RequestBody:
PathVariable: Long meetingId
expected return: Changes the status of the meeting to 1(happened)
error handling: Unexpected errors, Meeting doesn't belong to the user connected

method: POST
role: ROLE_RECEPTION, ROLE_DOCTOR
url: api/meeting/cancelMeeting/{id}
RequestBody:
PathVariable: Long meetingId
expected return: Changes the status of the meeting to -1(happened)
error handling: Unexpected errors, Meeting doesn't belong to the user connected

method: DELETE
role: ROLE_ADMIN
url: api/meeting/delete/{meetingId}
RequestBody:
PathVariable: Long meetingId
expected return: Deletes the meeting
error handling: Unexpected errors



5) Payment Controller

method: GET
role: ROLE_ADMIN
url: api/payments/getAll
RequestBody:
PathVariable:
expected return: All payment objects
error handling: Unexpected errors

method: GET
role: ROLE_ADMIN
url: api/payments/getFrom
RequestBody: LocalDateTime dateFrom
PathVariable:
expected return: All payment objects from dateGiven
error handling: Unexpected errors

method: GET
role: ROLE_ADMIN
url: api/payments/getById/{id}
RequestBody:
PathVariable:  Long paymentId
expected return: Payment with id given
error handling: Unexpected errors

method: GET
role: ROLE_ADMIN
url: api/payments/getByCashier/{id}
RequestBody:
PathVariable: Long cashierId
expected return: Payment filtered by cashiers
error handling: Unexpected errors

method: POST
role: ROLE_ADMIN
url: api/payments/makeForMeeting/{id}
RequestBody: Payment payment
{
    "description": "Оплатил за прием",
    "amountPaid": 250
}

PathVariable: Long meetingId
expected return: All payment objects
error handling: Unexpected errors, No meeting with the given id exists, Meeting with the given id is already payed fully

method: DELETE
role: ROLE_ADMIN
url: api/payments/delete/{id}
RequestBody:
PathVariable: Long paymentId
expected return: deleted payment with the given id
error handling: Unexpected errors

6) DiagnoseController

method: POST
role: ROLE_DOCTOR
url: api/diagnose/createForUser/{patientId}
RequestBody: Diagnose diagnose
{

}
PathVariable: Long patientId
expected return: Diagnose Created and returned
error handling: Unexpected errors

method: GET
role: "ROLE_ADMIN","ROLE_PATIENT","ROLE_DOCTOR"
url: api/diagnose/getByPatient/{id}
RequestBody:
PathVariable: Long patientId
expected return: Diagnose History Created For this patient
error handling: Unexpected errors

method: GET
role: "ROLE_ADMIN","ROLE_DOCTOR"
url: api/diagnose/getByDoctor/{id}
RequestBody:
PathVariable: Long doctorId
expected return: Diagnose History Created By this Doctor
error handling: Unexpected errors

method: DELETE
role: "ROLE_ADMIN
url: api/diagnose/deleteById/{id}
RequestBody:
PathVariable: Long diagnoseId
expected return: Diagnose with id given is deleted!
error handling: Unexpected errors






